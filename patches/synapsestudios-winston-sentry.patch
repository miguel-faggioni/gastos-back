--- node_modules/@synapsestudios/winston-sentry/index.js	2021-03-27 15:03:31.793039934 -0300
+++ node_modules/@synapsestudios/winston-sentry/index.js	2021-03-27 15:00:31.203043996 -0300
@@ -12,6 +12,10 @@
       message = meta.message;
   }
 
+  if (_.isObject(message)){
+    message = JSON.stringify(message);
+  }
+
   return message;
 }
 
@@ -44,15 +48,26 @@
   }
 
   log({ level, message, ...meta }, next) {
-    if (this.silent) return next(null, true);
-    if (!(level in this._levelsMap)) return next(null, true);
-
     const msg = normalizeMessage(message, meta);
     const context = _.isObject(meta) ? meta : {};
 
+    this._sentry.addBreadcrumb({
+      message: msg,
+      level: this._levelsMap[level],
+    });
+      
+    if (this.silent) return next(null, true);
+    if (!(level in this._levelsMap)) return next(null, true);
+      
     this._sentry.withScope(scope => {
       scope.setLevel(this._levelsMap[level]);
-      scope.setExtra('context', context);
+      if(_.isObject(context)){
+        Object.keys(context).forEach((contextKey) => {
+          scope.setExtra(contextKey, context[contextKey]);
+        })
+      }else{
+        scope.setExtra('context', context);
+      }
       this._sentry.captureMessage(msg);
       if (this._close) {
         this._sentry.close().then(() => next(null, true));
